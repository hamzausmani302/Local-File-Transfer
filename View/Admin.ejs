

<!DOCTYPE html>
<html>
   <head>
      <title>Hello world</title>
   </head>
   <script src = "/socket.io/socket.io.js"></script>
   <script src="/socket.io/socket.io.js"></script>
   <script src="/siofu/client.js"></script>
   <script>
      if(document.cookie.search("path=")!= -1){
         document.cookie = "path=;";
      }     
      socket = io();
      var rendered = false;
      var path = "";
      // var uploader = new SocketIOFileUpload(socket);
      // uploader.listenOnInput(document.getElementById("File"));
      // const file= new File("index1.txt");
      // socket.emit("message" , "hello");
      function getPathValue (){
         let path= document.cookie.search("path=");
         if(path  != -1){
            return document.cookie.substring(path).split("=")[1];

         }
         return '%2F';
      }
      socket.on("communication" , (message)=>{
         console.log("msg",message)
         
         if(message && message.status == 'startup'){
            document.getElementById("socket_msg").innerHTML =`<br /> <p style="color:green;">${message.data}</p>  <br />`
         }else if(message && message.status == "COMM"){
            document.getElementById("ListBox").innerHTML = "<br />"
            document.getElementById("ListBox").innerHTML += "<p onclick='goBack()'>../</p>";
            
            for(let i = 0 ; i < message.data.length ; i++){
               if(message.data[i].lastIndexOf(".") != -1){
                  document.getElementById("ListBox").innerHTML +=  `<img src='../Services/assets/diricon.png' /><a  href="/files/${getPathValue()}${message.data[i]}">${message.data[i]}</a><br />`
               }else{
                  document.getElementById("ListBox").innerHTML +=  `<img src='../Services/assets/diricon.png' /><span  class="FolderClass" " >${message.data[i]}</span><br />`
                  
               }
               // document.getElementById("ListBox").innerHTML +=  `<img src='../Services/assets/diricon.png' /><p class="FileList" > ${message.data[i]} </p><br />`
            setConfig();
          }
         }else if(message && message.status =="create_folder"){
            const error = message.data.error
            const data = message.data.data
            if(error==1){
               alert("Folder Already Exists");
            }else{
               alert("Folder Create Successfully");
            }
            console.log(error,data);            
         }else if(message && message.status == "RESET"){
            document.getElementById("ListBox").innerHTML= "";
         }
         
      })    
      
      socket.on("searchFilter"  , (msg)=>{
         console.log(msg , msg.length);
         document.getElementById("filtered").innerHTML= '';
      
         for(let i = 0 ; i < msg.length;i++){
            let m = msg[i].replaceAll("/" , "%2F");
            document.getElementById("filtered").innerHTML += `<img src='../Services/assets/diricon.png' /><a href="/files/${m}"> ${msg[i]} </a><br />`
      
         }
      })
   </script>
   <body>
       <h3>DASHBOARD </h3>
       <h6>Search Box :</h6>
         <input type="text" id="searchHere"/>
         <div id="filtered"> </div>
         <br />
         <br />
         <br />
         

       <form action="/profile" enctype="multipart/form-data" method="POST">
         <div class="form-group">
            <label for="myfile">Upload Other File Type:</label>
            <br />
            
           <input type="file" class="form-control-file" name="File">
           
           <input type="submit" value="Upload Selected File" class="btn btn-default">            
         </div>
       </form>
       
       <br />
       <br />
       <br />
       <div>
         <input type="text" id="foldername" />
         <button onclick="createFolder()" >Create Folder</button>>
         
      </div>
      
       <form id="uploadForm"> -->
         <label for="file_text">Upload Text File:</label>   
         <input name="file_text" id="upload" type="file"  />
        </form> 
        
       <div id="ListBox"><%- content %></div>
       <div id="socket_msg">NO_MESSAGE7</div>
         
       </div> 
       
       <form id="adminForn" method="POST" action="/addUser">
        <label for="uesr_name">Username</label>    
        <input type="text" id="user_name" name="user_name"/>

        <label for="pass_word">Password</label>    
        <input type="password" name="pass_word" id="pass_word"/>

    <br />        
        <input type="radio" id="user_type" name="user_type" value="User">

        <label for="html">User:</label><br>
        <br />
        <input type="radio" id="user_type" name="user_type" value="Admin">
        <label for="html">Admin</label><br>
        <input type="submit" />
       </form>
       <div id="success_result" style="color:green;"><%- success %></div>
       <div id="error_result" style="color:red;"><%- err %></div>
       
        <script>
           function goBack(){
            let path = document.cookie.search("path=");
                        if(path == -1){
                        }else{
                           let cookie_path = document.cookie.substring(path).split("=")[1];
                        
                           let curr_path =  cookie_path.lastIndexOf("/")-1;


                           let finalPath = cookie_path.substring(0,curr_path)
                           console.log(finalPath);
                           document.cookie = `path=${finalPath}`;
                           
                           socket.emit("DATA_TRANSFER" , finalPath);
                        }   
                        }
         setConfig();    
         function setConfig(){
                  
            setTimeout(
               ()=>{
                
                  var spans = document.getElementsByTagName('span');
                  for(let i=0 ; i < spans.length ; i++){
                     spans[i].onclick = ()=>{
                        socket.emit("DATA_TRANSFER", spans[i].innerHTML);
                        let path = document.cookie.search("path=");
                        if(path == -1){
                           console.log("ok")
                           document.cookie = `path=${spans[i].innerHTML}`;
                        }else{
                           let curr_path =  document.cookie.substring(path).split("=")[1];
                           let finalPath = curr_path + spans[i].innerHTML+"%2F";
                           document.cookie = `path=${finalPath}`;
                           
                           
                        }
                        

                     }
                  }
               
               },500
            )
               }

               document.getElementById("searchHere").addEventListener("keyup" , (event)=>{
                  
                  if(event.target.value){
                     socket.emit("search" , event.target.value);

                  }else{
                     document.getElementById("filtered").innerHTML = "";
                  }
               })
               function createFolder(){
                  let name = document.getElementById("foldername").value;
                  if(name){
                     console.log(name);
                     socket.emit("create_folder"   , name);
                  }
               }
               function handleFileSelect(evt) {
                  let files = evt.target.files; // FileList object
                  let f = files[0];
                  console.log(f);
                  let reader = new FileReader();

                  // Closure to capture the file information.
                  reader.onload = (function (theFile) {
                     return function (e) {
                           const data = e.target.result;
                           const filename = f.name;
                           console.log(data);
                           // var stream = ss.createStream()
                           
                           socket.emit("file_upload" , JSON.stringify({"filename" : filename , "data" : data}));
                     };
                  })(f);
                  // Read in the image file as a data URL.
                  reader.readAsBinaryString(f);
                  
                  
               }
               document.getElementById('upload').addEventListener('change', handleFileSelect, false);
    
        </script>
        
   </body>
</html>